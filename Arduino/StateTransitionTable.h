#pragma once

#include "DualButtonController.h"

enum Mode {
  MODE_OFF = 0,
  MODE_PERFORM,
  MODE_BRIGHTNESS,
  MODE_PROGRAM_ENTER,
  MODE_PROGRAM
};

enum Command {
  DO_NOTHING = 0,
  PERFORM_FIRST_CUE,
  PERFORM_NEXT_CUE,
  PERFORM_PREVIOUS_CUE,
  BRIGHTNESS_INCREASE,
  BRIGHTNESS_DECREASE,
  PROGRAM_FIRST_CUE,
  PROGRAM_NEXT_CUE,
  PROGRAM_DELETE_CUE,
  PROGRAM_INSERT_CUE,
  PROGRAM_ERASE_ALL_CUES,
  PROGRAM_CHANGE_FOREGROUND_COLOR,
  PROGRAM_CHANGE_BACKGROUND_COLOR,
  PROGRAM_CHANGE_ANIMATION
};

struct StateTransition {
  Mode currentMode;
  DualButtons::Button button;
  DualButtons::Event buttonEvent;
  Mode nextMode;
  Command command;
  DualButtons::Request buttonRequest;
};

using namespace DualButtons;

static constexpr StateTransition stateTransitionTable[] = {
  { MODE_OFF, BUTTON_A, PRESS, MODE_PERFORM, PERFORM_FIRST_CUE, NO_BUTTON_REQUEST },
  { MODE_OFF, BUTTON_B, PRESS, MODE_PERFORM, PERFORM_FIRST_CUE, NO_BUTTON_REQUEST },
  { MODE_OFF, BOTH_BUTTONS, HOLD, MODE_PROGRAM_ENTER, DO_NOTHING, NO_BUTTON_REQUEST },
  
  { MODE_PERFORM, BUTTON_A, PRESS, MODE_PERFORM, PERFORM_NEXT_CUE, NO_BUTTON_REQUEST },
  { MODE_PERFORM, BUTTON_B, PRESS, MODE_PERFORM, PERFORM_NEXT_CUE, NO_BUTTON_REQUEST },
  { MODE_PERFORM, BUTTON_A, HOLD, MODE_BRIGHTNESS, PERFORM_PREVIOUS_CUE, NO_BUTTON_REQUEST },
  { MODE_PERFORM, BUTTON_B, HOLD, MODE_BRIGHTNESS, PERFORM_PREVIOUS_CUE, SWAP_BUTTONS_ON_RELEASE },
  { MODE_PERFORM, BOTH_BUTTONS, PRESS, MODE_OFF, DO_NOTHING, NO_BUTTON_REQUEST },
  { MODE_PERFORM, BOTH_BUTTONS, HOLD, MODE_PROGRAM_ENTER, DO_NOTHING, NO_BUTTON_REQUEST },

  { MODE_BRIGHTNESS, BUTTON_A, SINGLE_TAP, MODE_BRIGHTNESS, BRIGHTNESS_INCREASE, NO_BUTTON_REQUEST },
  { MODE_BRIGHTNESS, BUTTON_B, SINGLE_TAP, MODE_BRIGHTNESS, BRIGHTNESS_DECREASE, NO_BUTTON_REQUEST },
  { MODE_BRIGHTNESS, BUTTON_A, HOLD, MODE_PERFORM, DO_NOTHING, NO_BUTTON_REQUEST },
  { MODE_BRIGHTNESS, BUTTON_B, HOLD, MODE_PERFORM, DO_NOTHING, NO_BUTTON_REQUEST },

  { MODE_PROGRAM_ENTER, BUTTON_A, SINGLE_TAP, MODE_PROGRAM, PROGRAM_FIRST_CUE, NO_BUTTON_REQUEST },
  { MODE_PROGRAM_ENTER, BUTTON_B, SINGLE_TAP, MODE_PROGRAM, PROGRAM_FIRST_CUE, SWAP_BUTTONS_ON_RELEASE },
  { MODE_PROGRAM_ENTER, BUTTON_A, DOUBLE_TAP, MODE_PROGRAM, PROGRAM_ERASE_ALL_CUES, NO_BUTTON_REQUEST },
  { MODE_PROGRAM_ENTER, BUTTON_B, DOUBLE_TAP, MODE_PROGRAM, PROGRAM_ERASE_ALL_CUES, SWAP_BUTTONS_ON_RELEASE },
  
  { MODE_PROGRAM, BOTH_BUTTONS, PRESS, MODE_OFF, DO_NOTHING, NO_BUTTON_REQUEST },
  { MODE_PROGRAM, BUTTON_A, SINGLE_TAP, MODE_PROGRAM, PROGRAM_NEXT_CUE, NO_BUTTON_REQUEST },
  { MODE_PROGRAM, BUTTON_A, DOUBLE_TAP, MODE_PROGRAM, PROGRAM_DELETE_CUE, NO_BUTTON_REQUEST },
  { MODE_PROGRAM, BUTTON_A, HOLD, MODE_PROGRAM, PROGRAM_INSERT_CUE, NO_BUTTON_REQUEST },
  { MODE_PROGRAM, BUTTON_B, SINGLE_TAP, MODE_PROGRAM, PROGRAM_CHANGE_FOREGROUND_COLOR, NO_BUTTON_REQUEST },
  { MODE_PROGRAM, BUTTON_B, DOUBLE_TAP, MODE_PROGRAM, PROGRAM_CHANGE_BACKGROUND_COLOR, NO_BUTTON_REQUEST },
  { MODE_PROGRAM, BUTTON_B, HOLD, MODE_PROGRAM, PROGRAM_CHANGE_ANIMATION, NO_BUTTON_REQUEST },
};

